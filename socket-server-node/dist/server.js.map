{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///external \"dotenv\"","webpack:///external \"http\"","webpack:///external \"koa\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"koa-router\"","webpack:///external \"koa2-cors\"","webpack:///external \"lodash\"","webpack:///external \"net\"","webpack:///external \"socket.io\"","webpack:///external \"socket.io-msgpack-parser\"","webpack:///external \"uuid/v1\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import dotenv from 'dotenv';\r\nimport koa from 'koa';\r\nimport koaRouter from 'koa-router';\r\nimport http from 'http';\r\nimport https from 'https';\r\nimport bodyParser from 'koa-bodyparser';\r\nimport cors from 'koa2-cors';\r\nimport net from 'net';\r\nimport _ from 'lodash';\r\nimport uuidv1 from 'uuid/v1';\r\nimport io from 'socket.io';\r\nimport msgpackParser from 'socket.io-msgpack-parser';\r\n\r\n/* 설정 세팅 =================================================================================================*/\r\ndotenv.config();\r\nconst app = new koa();\r\nconst server = new http.Server(app.callback());\r\nconst router = new koaRouter();\r\n\r\n// json 객체의 크기 축소, 바이너리 전송을 위해 message pack 적용\r\n// 일반 json 데이터 전송보다 빠름\r\nconst socketIo = io(server, {\r\n\tpingInterval: 10000, // ping 인터벌\r\n\tpingTimeout: 10000, // ping 타임아웃\r\n\ttransports: [ 'websocket', 'polling' ],\r\n\torigins: '*:*',\r\n\tparser: msgpackParser\r\n});\r\n\r\n// 포트\r\nconst socketIoPort: number = Number(process.env.PORT) || Number(process.env.SOCKET_IO_PORT) || 5000;\r\nconst ip: string = process.env.IP || '127.0.0.1';\r\nconst netPort: number = Number(process.env.NET_PORT) || 5001;\r\n\r\n// 개발모드인지 여부 true/false\r\nconst dev: boolean = process.env.NODE_ENV !== 'production';\r\n\r\n// 클라이언트 타입\r\ninterface clientType {\r\n\tclientSocket: any;\r\n\tuniqueId: string;\r\n\tnickName: string;\r\n\tnickId: string;\r\n\tsocketName: string;\r\n\tsocketGubun: string;\r\n}\r\n\r\n// bodyParser 적용\r\napp.use(bodyParser());\r\n\r\n// CORS 관련 옵션 설정\r\napp.use(cors());\r\n\r\n// 접속 클라이언틑 정보\r\nconst clientPool: clientType[] = [];\r\n\r\n// 접속한 클라이언트들 로그로 보여주기\r\nfunction connectClients() {\r\n\tconsole.log('접속 클라이언트들:');\r\n\tclientPool.map((data) => {\r\n\t\tconst { uniqueId, nickName, nickId, socketName, socketGubun } = data;\r\n\t\tconsole.log(\r\n\t\t\t`nickName:${nickName}, nickId:${nickId}, socketGubun:${socketGubun}, uniqueId:${uniqueId}, socketName:${socketName}`\r\n\t\t);\r\n\t});\r\n}\r\n/* 설정 세팅 =================================================================================================*/\r\n\r\n/* SOCKET.IO 서버 =================================================================================================*/\r\n// 소켓통신 이벤트 핸들러\r\n// connection\r\nsocketIo.on('connection', (socket: any) => {\r\n\t// 클라이언트 정보\r\n\tconst clientInfo: clientType = {\r\n\t\tclientSocket: socket,\r\n\t\tuniqueId: socket.id,\r\n\t\tnickName: socket.handshake.query.nickName,\r\n\t\tnickId: socket.handshake.query.nickId,\r\n\t\tsocketName: socket.handshake.query.socketName,\r\n\t\tsocketGubun: 'socket.io'\r\n\t};\r\n\r\n\t// 클라이언트가 접속했을 때 나머지 사용자에게 접속했다고 메시지 보내기\r\n\tconst connectedMsg = {\r\n\t\tmessage: clientInfo.nickName + '(이)가 접속 하였습니다.',\r\n\t\tnickName: clientInfo.nickName,\r\n\t\tnickId: clientInfo.nickId,\r\n\t\tisSelf: false\r\n\t};\r\n\r\n\tsocket.broadcast.emit('client.msg.receive', JSON.stringify(connectedMsg));\r\n\tconsole.log('연결됨');\r\n\r\n\t// 클라이언트 정보 PUSH\r\n\tclientPool.push(clientInfo);\r\n\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\r\n\t// SERVER RECEIVE 이벤트 핸들러(클라이언트 -> 서버)\r\n\tsocket.on('disconnect', (context: any) => {\r\n\t\tconst disconnectSocket = clientPool.filter((data: clientType) => data.uniqueId === socket.id)[0];\r\n\t\tconst disconnectMsg = {\r\n\t\t\tmessage: disconnectSocket.nickName + '(이)가 퇴장 하였습니다.',\r\n\t\t\tnickName: disconnectSocket.nickName,\r\n\t\t\tnickId: disconnectSocket.nickId,\r\n\t\t\tisSelf: false\r\n\t\t};\r\n\r\n\t\t// 클라이언트가 접속을 끊었을 때 나머지 클라이언트들에게 접속 끊었다고 메시지 보내기\r\n\t\tsocket.broadcast.emit('client.msg.receive', JSON.stringify(disconnectMsg));\r\n\t\t_.remove(clientPool, (data: any) => data.uniqueId === socket.id);\r\n\r\n\t\tconsole.log('socket.io client disconnected!');\r\n\t});\r\n\r\n\tsocket.on('client.msg.send', (context: any) => {\r\n\t\tconsole.log('socket.io data:', context);\r\n\r\n\t\tsocket.broadcast.emit('client.msg.receive', context);\r\n\r\n\t\t// .NET 클라이언트에게로 메시지 보내기\r\n\t\tclientPool.filter((data) => data.socketGubun === 'net').map((data) => {\r\n\t\t\tdata.clientSocket.write(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\taction: 'client.msg.receive',\r\n\t\t\t\t\tdata: context\r\n\t\t\t\t}),\r\n\t\t\t\t(err: any) => {}\r\n\t\t\t);\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// router.get('/messages/:chat', (ctx, next) => {\r\n//   console.log(messages[ctx.params.chat]);\r\n//   ctx.body = JSON.stringify(messages[ctx.params.chat]);\r\n// });\r\n\r\nrouter.get('*', (ctx, next) => {\r\n\treturn (ctx.response.body = 'hello!');\r\n});\r\n\r\napp.use(router.routes());\r\n\r\n// socket.io 서버 listen\r\nserver.listen(socketIoPort, (err: any) => {\r\n\tif (err) throw err;\r\n\tconsole.log(`> SOCKET.IO Server Listening! port:${socketIoPort}`);\r\n});\r\n/* SOCKET.IO 서버 =================================================================================================*/\r\n\r\n/* NET 서버 =======================================================================================================*/\r\n// net 서버 listen\r\n// const netServer = net.createServer((socket: any) => {\r\n// \tconsole.log('> Ready On NET Server!');\r\n\r\n// \tsocket.on('end', () => {\r\n// \t\tconsole.log('> NET Server End');\r\n// \t});\r\n\r\nconst netServer = net.createServer((socket: any) => {\r\n\tconst remoteAddress = socket.remoteAddress + ':' + socket.remotePort;\r\n\tconsole.log('client connected:', remoteAddress);\r\n\r\n\t// clientPool.map((data) => {\r\n\t// \tconsole.log('접속 클라이언트들:', data.socketName, data.uniqueId);\r\n\t// });\r\n\r\n\t// 클라이언트 정보\r\n\tconst clientInfo: clientType = {\r\n\t\tclientSocket: socket,\r\n\t\tnickName: socket.nickName,\r\n\t\tnickId: socket.nickId,\r\n\t\tuniqueId: uuidv1(),\r\n\t\tsocketName: '',\r\n\t\tsocketGubun: 'net'\r\n\t};\r\n\r\n\t// 클라이언트에게 uniqueId 를 전송함\r\n\tsocket.write(\r\n\t\tJSON.stringify({\r\n\t\t\taction: 'client.msg.connected',\r\n\t\t\tdata: clientInfo.uniqueId\r\n\t\t})\r\n\t);\r\n\r\n\t// 클라이언트 정보 PUSH\r\n\tclientPool.push(clientInfo);\r\n\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\r\n\tsocket.on('data', (data: any) => {\r\n\t\tconst msg = data.toString();\r\n\t\tconsole.log('net data:', msg);\r\n\r\n\t\t// 브라우저쪽으로 .NET 클라이언트에서 보낸 메세지 보내기\r\n\t\tclientPool.filter((data) => data.socketGubun === 'socket.io').map((data) => {\r\n\t\t\tdata.clientSocket.emit('client.msg.receive', msg);\r\n\t\t});\r\n\t});\r\n\r\n\tsocket.on('close', () => {\r\n\t\tconsole.log('NET Server Closed!');\r\n\r\n\t\t// 연결 끊어진 소켓을 클라이언트풀에서 삭제처리\r\n\t\t_.remove(clientPool, (data: any) => data.clientSocket === socket);\r\n\r\n\t\t// 접속한 클라이언트들 보여주기\r\n\t\tconnectClients();\r\n\r\n\t\tsocket.end('소켓 closed!');\r\n\t});\r\n\r\n\tsocket.on('end', () => {\r\n\t\tconsole.log('NET Socket Client end!');\r\n\t});\r\n\r\n\tsocket.on('error', (err: any) => {});\r\n});\r\n\r\nnetServer.on('connection', (conn) => {\r\n\tconsole.log('connected!');\r\n\r\n\t// 접속한 클라이언트들 보여주기\r\n\tconnectClients();\r\n\t//console.log(conn);\r\n});\r\n\r\n// netServer.listen(netPort, () => {\r\n// \tconsole.log(`> NET Server Listening! port:${netPort}`);\r\n// });\r\n/* NET 서버 =======================================================================================================*/\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"http\");","module.exports = require(\"koa\");","module.exports = require(\"koa-bodyparser\");","module.exports = require(\"koa-router\");","module.exports = require(\"koa2-cors\");","module.exports = require(\"lodash\");","module.exports = require(\"net\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-msgpack-parser\");","module.exports = require(\"uuid/v1\");"],"sourceRoot":""}